---
layout:     post
title:      安全测试实践
subtitle:   ""
date:       2021-02-11 12:00:00
author:     DanteYu
tags:
    - security
---

此文章记录我在平时做功能测试(故事卡测试)时，在安全方面有哪些设计和执行来覆盖最常见的一些安全漏洞

#### XSS(cross site scripting)
##### 如何测试
##### 如何修复和预防

#### SQL注入(SQL injection)
##### 如何测试
SQL注入需要输入含有恶意的SQL语句带入数据库执行，通过这个恶意的SQL语句，获取表数据以及对数据增查改删，因为SQL注入漏洞的危害是极大的。 推荐下面二种方法进行测试

第一种 手工测试
1.对于数字 使用 `para=100` 判断查询正常, `para=100 and 1=1` 判断查询正常, `para=100'` 判断页面异常或是查询为空， `para=100 and 1=2` 查询数据为空
2.对于字符串 使用 `para=test` 判断查询正常, `para=test and 1=1` 判断查询正常, `para=test'` 判断页面异常或是查询为空， `para=test and 1=2` 查询数据为空
3.对于搜索 使用 `para=test` 判断查询正常, `para=test%' and '%'='` 判断查询正常, `para=test'` 判断页面异常或是查询为空， `para=test%' and 'a%'='b` 查询数据为空

通过上面的方式可以确定SQL注入是否存在，存在之后，就可以结合其他sql语句进行攻击。对于我们测试人员，在已知数据库结构和数据的情况下，就非常简单了，可以使用下面语句进行攻击
`1' order by 1#`;(按照Mysql语法，#后面会被注释掉，使用这种方法屏蔽掉后面的单引号，避免语法错误)  不断增加 order by 后面的数字会判断出有多少列
* 输入`1' union select database(),user()#` 就等于`SELECT first_name, last_name FROM users WHERE user_id = '1' union select database(),user()#`;`  database()将会返回当前网站所使用的数据库名字. user()将会返回执行当前查询的用户名. 类似地还有 `1' union select table_name,table_schema from information_schema.tables where table_schema= 'dvwa'#` information_schema 是 mysql 自带的一张表，这张数据表保存了 Mysql 服务器所有数据库的信息,如数据库名，数据库的表，表栏的数据类型与访问权限等


作者：Jewel591
链接：https://www.jianshu.com/p/078df7a35671
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。`

第二种 使用工具sqlmap

##### 如何修复和预防
1. 当操作数据库时，需要实现PreparementStatement接口对SQL语句进行预编译处理。

#### 权限管理
##### 如何测试
* 越权 - 不同的用户应该有严格的权限管理，不被允许的资源就应该有相应的处理，比如通过URL访问不属于自己权限内的资源，就应该进入相应报错页面。一般这类处理都应该在需求阶段提出。越权一般分为水平越权和垂直越权。水平越权指得是同级别用户的越权，垂直越权指得是具有从属关系，从而带来不同权限范围的用户的越权
##### 如何修复和预防

#### 敏感数据
##### 如何测试
* 如果项目需求涉及图片上传，取名等时，我们就应该考虑对文字和图片进行风险控制，避免涉及暴力、政治和色情等不良信息在系统中存储使用。一般做法是对接第三方平台进行验证
* 如果项目中有涉及用户密码等隐私数据，我们就应该采用加密存储

#### 其他测试点
* 修改URL的参数
* 修改cookie中的数据


